{"version":3,"sources":["accordion.js","main.js","menu.js","popup.js","slider.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzfile":"main.js","sourcesContent":["(function () {\n  const accordion = document.querySelector('.accordion');\n\n  const ACCORDION_HIDDEN_CLASS = 'accordion__content--hidden';\n  const ACCORDION_CURRENT_CLASS = 'accordion__item--current';\n\n  let focus;\n\n  function closeAccordionContent(content) {\n    content.forEach(function (elem) {\n      elem.classList.add(ACCORDION_HIDDEN_CLASS);\n    })\n  }\n\n  function showAccordionContent(item) {\n    item.classList.toggle(ACCORDION_CURRENT_CLASS);\n    const currentContent = item.querySelector('.accordion__content');\n    currentContent.classList.toggle(ACCORDION_HIDDEN_CLASS);\n\n  }\n\n  function openAccordion() {\n    if (accordion) {\n      const accordionContents = accordion.querySelectorAll('.accordion__content');\n      const accordionItems = accordion.querySelectorAll('.accordion__item');\n\n      closeAccordionContent(accordionContents);\n      accordionItems.forEach(function (item) {\n        item.addEventListener('click', function () {\n          showAccordionContent(item);\n        })\n      })\n      const onDocumentKeyDown = function (evt) {\n        if (evt.key === 'Enter') {\n          showAccordionContent(focus);\n        }\n      }\n      const onItemFocus = function (evt) {\n        focus = evt.target;\n        document.addEventListener('keydown', onDocumentKeyDown);\n      }\n      accordion.addEventListener('focusin', onItemFocus);\n    }\n  }\n\n  openAccordion();\n})();\n","","'use strict';\n(function () {\n  const page = document.querySelector('.page-body');\n  const header = page.querySelector('.page-header');\n  const menu = header.querySelector('.main-navigation');\n  const menuButton = header.querySelector('.page-header__button-menu');\n  const search = header.querySelector('.search');\n\n  function openCloseMenu() {\n    header.classList.remove('page-header--nojs');\n    menu.classList.remove('main-navigation--nojs');\n    search.classList.remove('search--nojs');\n    menuButton.addEventListener('click', function () {\n      menu.classList.toggle('main-navigation--closed');\n      menu.classList.toggle('main-navigation--opened');\n      page.classList.toggle('page-body--opened-menu');\n      header.classList.toggle('page-header--opened-menu');\n      search.classList.toggle('search--opened-menu');\n      const attribute = menu.classList.contains('main-navigation--opened') ? 'close the menu' : 'open the menu';\n      menuButton.setAttribute('aria-label', attribute);\n    });\n  }\n\n  openCloseMenu();\n})();\n","(function () {\n  const page = document.body;\n  const loginButtons = document.querySelectorAll('.login');\n  const loginTemplate = document.querySelector('#login').content.querySelector('.modal');\n  const loginModal = loginTemplate.cloneNode(true);\n  const closeLoginModalButton = loginModal.querySelector('.modal__close');\n  const emailInput = loginModal.querySelector('input[type=email]');\n  const filterButton = document.querySelector('.filter__button');\n  const filterForm = document.querySelector('.filter__form');\n  const filter = document.querySelector('.filter');\n\n  let mobileDevice = window.matchMedia(\"(max-width: 767px)\");\n\n  const CLASS_PAGE_OPENED_POPUP = 'page-body--opened-modal';\n  const CLASS_HIDDEN_LOGIN_POPUP = 'modal--hidden';\n\n  const focusableElements = (modal) => modal.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])');\n\n  function closeLoginModal() {\n    loginModal.classList.add(CLASS_HIDDEN_LOGIN_POPUP);\n    page.classList.remove(CLASS_PAGE_OPENED_POPUP);\n\n    closeLoginModalButton.removeEventListener('click', onCloseLoginModalButtonClick);\n  }\n\n  function closeModalEsc(evt, closeFunction) {\n    if (evt.key === 'Escape' || evt.key === 'Esc') {\n      evt.preventDefault();\n      closeFunction();\n    }\n  };\n\n  const isTargetModal = (evt, modal, classModal) => evt.target !== modal && !evt.target.classList.contains(classModal) && !modal.contains(evt.target);\n\n  function closeModalDocumentClick(evt, closeFunction, modal, classModal) {\n    if (isTargetModal(evt, modal, classModal)) {\n      closeFunction();\n    }\n  };\n\n  const onCloseLoginModalButtonClick = function () {\n    closeLoginModal();\n  }\n\n  function trapFocus(modal) {\n    const focusableElementsModal = focusableElements(modal);\n    const firstFocusableElement = focusableElementsModal[0];\n    const lastFocusableElement = focusableElementsModal[focusableElementsModal.length - 1];\n    modal.addEventListener('keydown', function (evt) {\n      if (evt.key === 'Tab') {\n        if (evt.shiftKey) {\n          if (document.activeElement === firstFocusableElement) {\n            lastFocusableElement.focus();\n            evt.preventDefault();\n          }\n        } else {\n          if (document.activeElement === lastFocusableElement) {\n            firstFocusableElement.focus();\n            evt.preventDefault();\n          }\n        }\n      }\n    })\n  }\n\n  function openLoginModal() {\n    loginButtons.forEach(function (button) {\n      button.addEventListener('click', function (evt) {\n        evt.preventDefault();\n        page.prepend(loginModal);\n\n        page.classList.add(CLASS_PAGE_OPENED_POPUP);\n        loginModal.classList.remove(CLASS_HIDDEN_LOGIN_POPUP);\n        emailInput.focus();\n        trapFocus(loginModal)\n\n        document.addEventListener('keydown', (evt) => closeModalEsc(evt, closeLoginModal));\n        document.addEventListener('click', (evt) => closeModalDocumentClick(evt, closeLoginModal, loginModal, 'login'));\n        closeLoginModalButton.addEventListener('click', onCloseLoginModalButtonClick);\n      })\n    })\n  }\n\n  openLoginModal();\n\n  function openFilter() {\n    if (filterForm) {\n      const filterCloseButton = filterForm.querySelector('.filter__close');\n      const inputFilter = filterForm.querySelector('input');\n      const closeFilter = () => {\n        filterForm.classList.add('filter__form--hidden');\n        page.classList.remove(CLASS_PAGE_OPENED_POPUP);\n      }\n\n      filter.classList.remove('filter--nojs');\n      filterButton.addEventListener('click', function () {\n        filterForm.classList.remove('filter__form--hidden');\n        inputFilter.focus();\n        trapFocus(filterForm);\n        if (mobileDevice.matches) {\n          page.classList.add(CLASS_PAGE_OPENED_POPUP);\n        } else {\n          page.classList.remove(CLASS_PAGE_OPENED_POPUP);\n        }\n\n        window.addEventListener('resize', function () {\n          if (mobileDevice.matches) {\n            page.classList.add(CLASS_PAGE_OPENED_POPUP);\n          } else {\n            page.classList.remove(CLASS_PAGE_OPENED_POPUP);\n          }\n\n        });\n        document.addEventListener('keydown', (evt) => closeModalEsc(evt, closeFilter));\n        document.addEventListener('click', (evt) => closeModalDocumentClick(evt, closeFilter, filterForm, 'filter__button'));\n        filterCloseButton.addEventListener('click', closeFilter);\n      })\n    }\n  }\n\n  openFilter();\n})();\n","(function () {\n  const slider = document.querySelector('.slider');\n  const sliderButtonPrev = document.querySelector('.control--previous');\n  const sliderButtonNext = document.querySelector('.control--next');\n  const paginationList = document.querySelector('.pagination__list');\n  const currentPageElement = document.querySelector('.pagination__current-page');\n  const totalPagesElement = document.querySelector('.pagination__total-page');\n\n  let smallDevice = window.matchMedia(\"(max-width: 1023px)\");\n  let mobileDevice = window.matchMedia(\"(max-width: 767px)\");\n\n  let counter = 0;\n\n\n  function disableButton(button, value) {\n    button.disabled = value;\n  }\n\n  function changeCurrentPage(index, pagination) {\n    pagination[index].classList.remove('pagination__item--current');\n    pagination[counter].classList.add('pagination__item--current');\n  }\n\n  function getNumberPreviousCards(numberCards) {\n    return numberCards * counter;\n  }\n\n  function getNumberNextCards(cards, numberCards) {\n    return cards.length - getNumberPreviousCards(numberCards);\n  }\n\n  function isLastPages(amountPages) {\n    return (counter + 1) == amountPages;\n  }\n\n  function isFirstPages() {\n    return counter === 0\n  }\n\n  function changeStatusButton(amountPages) {\n    if (isFirstPages()) {\n      disableButton(sliderButtonPrev, true);\n      disableButton(sliderButtonNext, false);\n    } else {\n      disableButton(sliderButtonPrev, false);\n      disableButton(sliderButtonNext, false);\n    } if (isLastPages(amountPages)) {\n      disableButton(sliderButtonNext, true);\n      disableButton(sliderButtonPrev, false);\n    }\n  }\n\n  function showCardSlider(cards, numberCards, amountPages) {\n    cards.forEach(function (elem) {\n      elem.classList.add('card-product--hidden');\n      elem.classList.remove('card-product--opacity');\n    });\n\n    const amountShowCards = (isLastPages(amountPages)) ? getNumberNextCards(cards, numberCards) : numberCards;\n    for (let i = getNumberPreviousCards(numberCards); i < (getNumberPreviousCards(numberCards) + amountShowCards); i++) {\n      cards[i].classList.remove('card-product--hidden');\n      function addOpacity() {\n        cards[i].classList.add('card-product--opacity');\n      }\n      setTimeout(() => addOpacity(), 100);\n    }\n  }\n\n  function showPreviousSliderCards(amountPages, cards, numberCards, pagination) {\n    counter--;\n    showCardSlider(cards, numberCards, amountPages)\n\n    const previousIndex = counter + 1;\n    changeCurrentPage(previousIndex, pagination);\n\n    changeStatusButton(amountPages);\n  }\n\n  function showNextSliderCards(amountPages, cards, numberCards, pagination) {\n    counter++;\n    showCardSlider(cards, numberCards, amountPages)\n\n    const previousIndex = counter - 1;\n    changeCurrentPage(previousIndex, pagination);\n    changeStatusButton(amountPages);\n  }\n\n\n  function shiftPage(cards, numberCards, pagination, amountPages) {\n    if (paginationList) {\n      pagination[0].classList.add('pagination__item--current');\n      for (let page of pagination) {\n        page.addEventListener('click', function () {\n          for (let page of pagination) {\n            page.classList.remove('pagination__item--current');\n          }\n          this.classList.add('pagination__item--current');\n          counter = this.textContent - 1;\n\n          showCardSlider(cards, numberCards, amountPages)\n\n          changeStatusButton(amountPages);\n        })\n      }\n    }\n\n  }\n\n\n  function createPagination(amountPages) {\n    if (paginationList) {\n      if (paginationList.style.display != 'none') {\n        const paginationFragment = document.createDocumentFragment();\n        for (let i = 1; i <= amountPages; i++) {\n          const paginationTemplate = document.querySelector('#pagination').content.querySelector('li');\n          const paginationElement = paginationTemplate.cloneNode(true);\n          const buttonPage = paginationElement.querySelector('button');\n          buttonPage.textContent = i;\n          paginationFragment.append(paginationElement);\n        }\n        paginationList.textContent = '';\n        paginationList.append(paginationFragment);\n      }\n    }\n  }\n\n\n  function swipeSlider(cards, amountPages, numberCards, pagination) {\n    slider.addEventListener('touchstart', handleTouchStart, false);\n    slider.addEventListener('touchmove', handleTouchMove, false);\n\n    let startPoint = 0;\n    let endPoint = 0;\n    const SENSITIVITY = 20;\n\n    function handleTouchStart(evt) {\n      const startTouch = evt.changedTouches[0];\n      startPoint = startTouch.clientX;\n    }\n\n    function handleTouchMove(evt) {\n      if (!startPoint) {\n        return\n      }\n\n      endPoint = evt.changedTouches[0].clientX;\n      const differencePoint = startPoint - endPoint;\n\n      if (Math.abs(differencePoint) > SENSITIVITY) {\n\n        if (differencePoint > 0) {\n\n          if (isLastPages(amountPages)) {\n            return;\n          } else {\n            evt.preventDefault();\n            showNextSliderCards(amountPages, cards, numberCards, pagination)\n            if (currentPageElement) {\n              currentPageElement.textContent = counter + 1;\n            }\n\n\n          }\n        } else if (differencePoint < 0) {\n\n          if (isFirstPages()) {\n            return;\n          } else {\n            evt.preventDefault();\n            showPreviousSliderCards(amountPages, cards, numberCards, pagination);\n            if (currentPageElement) {\n              currentPageElement.textContent = counter + 1;\n            }\n          }\n        }\n\n        startPoint = 0;\n        endPoint = 0;\n      }\n    }\n  }\n\n\n\n  function scrollSlider(cards, amountPages, numberCards) {\n    slider.classList.remove('slider--nojs');\n    cards.forEach((card) => card.classList.remove('card-product--nojs'));\n    sliderButtonPrev.classList.remove('control--nojs');\n    sliderButtonNext.classList.remove('control--nojs');\n    showCardSlider(cards, numberCards, amountPages);\n\n    let pages;\n    if (paginationList) {\n      pages = paginationList.getElementsByClassName('pagination__item');\n      pages[0].classList.add('pagination__item--current');\n    }\n\n    changeStatusButton(amountPages)\n\n    if (cards.length <= numberCards) {\n      disableButton(sliderButtonPrev, true);\n      disableButton(sliderButtonNext, true);\n    } else if (mobileDevice.matches) {\n      swipeSlider(cards, amountPages, numberCards, pages);\n      if (currentPageElement) {\n        currentPageElement.textContent = counter + 1;\n        totalPagesElement.textContent = amountPages;\n      }\n    } else if (smallDevice.matches) {\n      swipeSlider(cards, amountPages, numberCards, pages);\n\n      sliderButtonPrev.addEventListener('click', () => showPreviousSliderCards(amountPages, cards, numberCards, pages));\n      sliderButtonNext.addEventListener('click', () => showNextSliderCards(amountPages, cards, numberCards, pages));\n\n      shiftPage(cards, numberCards, pages, amountPages);\n    } else {\n      sliderButtonPrev.addEventListener('click', () => showPreviousSliderCards(amountPages, cards, numberCards, pages));\n      sliderButtonNext.addEventListener('click', () => showNextSliderCards(amountPages, cards, numberCards, pages));\n\n      shiftPage(cards, numberCards, pages, amountPages)\n    }\n  }\n\n  function controlSlider() {\n    const sliderCards = slider.querySelectorAll('li');\n    const numberSliderCards = slider.classList.contains('catalog__list') ? 12 : (smallDevice.matches) ? 2 : 4;\n    const amountPages = Math.ceil(sliderCards.length / numberSliderCards);\n    createPagination(amountPages);\n    scrollSlider(sliderCards, amountPages, numberSliderCards);\n  }\n\n  if (slider) {\n    controlSlider()\n\n    window.addEventListener('resize', () => controlSlider());\n  }\n})();\n"]}